<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<title>{{title}}</title>

		<meta name="description" content="{{description}}">

		<link rel="stylesheet" href="/reveal.js/css/reveal.css">
	        <link rel="stylesheet" href="/reveal.js/css/theme/{{style}}" id="theme">

		<!-- Theme used for syntax highlighting of code -->
		<link rel="stylesheet" href="/reveal.js/lib/css/zenburn.css">-
	</head>
	<body>
		<div class="reveal">
			<div class="slides">
				<section data-markdown="/slides/{{file}}" data-charset="utf-8" data-separator="^\r?\n---\r?\n$" data-separator-vertical="^\r?\n----\r?\n$"> </section>
			</div>
		</div>

		<script src="/reveal.js/lib/js/head.min.js"></script>
		<script src="/reveal.js/js/reveal.js"></script>

		<script>
			// More info about config & dependencies:	
			// - https://github.com/hakimel/reveal.js#configuration
			// - https://github.com/hakimel/reveal.js#dependencies
			Reveal.initialize({
                                multiplex: {
		                        // Example values. To generate your own, see the socket.io server instructions.
		                        secret: null, // null so the clients do not have control of the master presentation
		                        id: '35e7b200676a2e31', // id, obtained from socket.io server
		                        url: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server
                        	},
				dependencies: [
					{ src: "/reveal.js/plugin/markdown/marked.js" },
					{ src: "/reveal.js/plugin/markdown/markdown.js" },
					{ src: "/reveal.js/plugin/notes/notes.js", async: true },
					{ src: "/reveal.js/plugin/highlight/highlight.js", async: true, callback: function() { 
hljs.initHighlightingOnLoad(); } },
                                        { src: "//cdn.socket.io/socket.io-1.3.5.js", async: true },
                                        { src: "/reveal.js/plugin/multiplex/client.js", async: true }
				]
			});
		</script>
	</body>
</html>
